{
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Falcosidekick UI",
        "title": "Falcosidekick UI",
        "contact": {
            "name": "Falco Authors",
            "url": "https://github.com/falcosecurity",
            "email": "cncf-falco-dev@lists.cncf.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:2802",
    "basePath": "/api/v1",
    "paths": {
        "/": {
            "post": {
                "description": "Add Event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add Event",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Payload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/configuration": {
            "get": {
                "description": "Configuration",
                "produces": [
                    "application/json"
                ],
                "summary": "Configuration",
                "responses": {
                    "200": {
                        "description": "Configuration",
                        "schema": {
                            "$ref": "#/definitions/configuration.Configuration"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/events/count": {
            "get": {
                "description": "Count Events",
                "produces": [
                    "application/json"
                ],
                "summary": "Count Events",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "pretty",
                        "name": "pretty",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "priority",
                        "name": "priority",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "source",
                        "name": "source",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "rule",
                        "name": "rule",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tags",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "since",
                        "name": "since",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Count Events Result",
                        "schema": {
                            "$ref": "#/definitions/models.ResultsCount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/events/count/:groupby": {
            "get": {
                "description": "Count Events By",
                "produces": [
                    "application/json"
                ],
                "summary": "Count Events By",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group By",
                        "name": "groupby",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "pretty",
                        "name": "pretty",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "priority",
                        "name": "priority",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "source",
                        "name": "source",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "rule",
                        "name": "rule",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tags",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "since",
                        "name": "since",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Count Events By Result",
                        "schema": {
                            "$ref": "#/definitions/models.ResultsCountBy"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/events/search": {
            "get": {
                "description": "Search Events",
                "produces": [
                    "application/json"
                ],
                "summary": "Search Events",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "pretty",
                        "name": "pretty",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "priority",
                        "name": "priority",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "source",
                        "name": "source",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "rule",
                        "name": "rule",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tags",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "since",
                        "name": "since",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search Events Result",
                        "schema": {
                            "$ref": "#/definitions/models.ResultsSearch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "description": "Healthcheck",
                "produces": [
                    "application/json"
                ],
                "summary": "Healthcheck",
                "responses": {
                    "200": {
                        "description": "{\\\"ok\\\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/outputs": {
            "get": {
                "description": "Healthcheck",
                "produces": [
                    "application/json"
                ],
                "summary": "List Outputs",
                "responses": {
                    "200": {
                        "description": "Outputs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Version",
                "produces": [
                    "application/json"
                ],
                "summary": "Version",
                "responses": {
                    "200": {
                        "description": "Version",
                        "schema": {
                            "$ref": "#/definitions/configuration.VersionInfo"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "configuration.Configuration": {
            "type": "object",
            "properties": {
                "dev-mode": {
                    "type": "boolean"
                },
                "listen-address": {
                    "description": "DisplayMode   string `json:\"display-mode\"`",
                    "type": "string"
                },
                "listen-port": {
                    "type": "integer"
                },
                "redis-server": {
                    "type": "string"
                }
            }
        },
        "configuration.VersionInfo": {
            "type": "object",
            "properties": {
                "buildDate": {
                    "type": "string"
                },
                "compiler": {
                    "type": "string"
                },
                "gitCommit": {
                    "type": "string"
                },
                "gitTreeState": {
                    "type": "string"
                },
                "gitVersion": {
                    "type": "string"
                },
                "goVersion": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                }
            }
        },
        "models.Event": {
            "type": "object",
            "required": [
                "output",
                "priority",
                "rule",
                "time"
            ],
            "properties": {
                "output": {
                    "type": "string"
                },
                "output_fields": {
                    "type": "object",
                    "additionalProperties": true
                },
                "priority": {
                    "type": "string"
                },
                "rule": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "models.Payload": {
            "type": "object",
            "required": [
                "event",
                "outputs"
            ],
            "properties": {
                "event": {
                    "$ref": "#/definitions/models.Event"
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ResultsCount": {
            "type": "object",
            "properties": {
                "statistics": {
                    "$ref": "#/definitions/models.Statistics"
                }
            }
        },
        "models.ResultsCountBy": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "statistics": {
                    "$ref": "#/definitions/models.Statistics"
                }
            }
        },
        "models.ResultsSearch": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/models.Event"
                    }
                },
                "statistics": {
                    "$ref": "#/definitions/models.Statistics"
                }
            }
        },
        "models.Statistics": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "integer"
                },
                "distincts": {
                    "type": "integer"
                },
                "returned": {
                    "type": "integer"
                }
            }
        }
    }
}